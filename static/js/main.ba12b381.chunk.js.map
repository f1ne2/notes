{"version":3,"sources":["forms/Clock.js","forms/NameForm.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","time","Date","getHours","getMinutes","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","zeros","i","myDate","year","getFullYear","month","getMonth","days","getDate","getDay","className","getFormat","Component","NameForm","value","remove","handleChange","bind","handleSubmit","removeClick","notes","event","target","preventDefault","push","localStorage","setItem","String","now","item","res","length","children","del","key","removeItem","splice","note","getItem","pop","getResult","NoteStructure","React","id","onClick","type","placeholder","required","onChange","map","todo","rows","cols","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba12b381.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: this.zeros(new Date().getHours()) + \":\" + this.zeros(new Date().getMinutes()) + \":\" +\n                this.zeros(new Date().getSeconds())\n        });\n    }\n\n    zeros(i) {\n        if (i < 10) {\n            return \"0\" + i;\n        } else {\n            return i;\n        }\n    }\n\n    getFormat() {\n        let myDate = new Date();\n        let year = myDate.getFullYear();\n        let month = myDate.getMonth();\n        let days = myDate.getDate();\n        let day = myDate.getDay();\n        let dayArray = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        let monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"];\n        return (dayArray[day] + \" \"+ days + \" \"+ monthArray[month] + \" \" + year);\n    }\n\n    render() {\n        return <p className=\"App-clock\">{this.getFormat()} <br/>\n                <span>{this.state.time}</span>\n              </p>;\n    }\n}\n\nexport default Clock;","import React from \"react\";\nimport form from \"./form.css\";\nimport Clock from \"./Clock\";\n\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: '', remove: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeClick = this.removeClick.bind(this);\n        this.notes = [];\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.value !== \"\") {\n            this.notes.push(this.state.value);\n            localStorage.setItem(String(Date.now()), this.state.value);\n            this.setState({value: \"\"})\n    }}\n\n    removeClick(item) {\n        for (let i=0; i<=this.res.length-1; i++) {\n            if (this.res[i].props.children === item.props.children) {\n                let del = localStorage.key(i);\n                localStorage.removeItem(String(del));\n                this.res.splice(i);\n            }\n        }\n        this.setState({value: \"\"})\n    }\n\n    getResult() {\n        this.res = []\n        for (let i = 0; i<=localStorage.length; i++) {\n            const note = localStorage.getItem(localStorage.key(i));\n            this.res.push(<div>{note}</div> );\n        }\n        this.res.pop();\n    };\n\n    render() {\n        this.getResult()\n        return (\n            <div>\n                <NoteStructure handleChange={this.handleChange} handleSubmit={this.handleSubmit}\n                               removeClick={this.removeClick} res={this.res} state={this.state}/>\n            </div>);\n    }}\n\nexport default NameForm;\n\nfunction NoteStructure(props) {\n    return (<div>\n        <div className=\"wide\">\n            <div className=\"main-container\">\n                <div className=\"top\">\n                    <div className=\"title\">\n                        <h1 id=\"date\"><Clock /> </h1>\n                        <h2>You've got <span className=\"total__items\">{props.res.length} </span> to do today!</h2>\n                </div>\n                <button className=\"add_btn\" onClick={props.handleSubmit}>+</button>\n                </div>\n            </div>\n        </div>\n        <div className=\"bottom\">\n            <div className=\"add\">\n                <div className=\"add__container\">\n                    <input type=\"text\" className=\"add__description\"\n                           placeholder=\"What would you like to do today?\"\n                    required=\"True\" value={props.state.value} onChange={props.handleChange}/>\n                </div>\n            </div>\n        </div>\n        <div className=\"container-fluid\">\n            <div className=\"row\" >\n                {props.res.map(todo => {\n                    return (<div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n                            <div className=\"notes\">\n                            <div className=\"todos\"><textarea rows=\"5\" cols=\"12\" value={localStorage.getItem\n                            (localStorage.key(props.res.indexOf(todo)))}/>\n                            </div>\n                            <div className=\"block\">\n                                <button type=\"button\" className=\"close\" onClick={() =>\n                                    props.removeClick(todo)}>üóëÔ∏è\n                                </button>\n                            </div>\n                        </div>\n                        </div>)})}\n            </div>\n        </div>\n    </div>);\n}\n","import NameForm from \"./forms/NameForm\";\n\nfunction App() {\n  return (<div className=\"container-fluid\">\n            <NameForm />\n          </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}