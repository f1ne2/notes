{"version":3,"sources":["forms/Clock.js","forms/TodoList.js","forms/NameForm.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","time","Date","getHours","getMinutes","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","zeros","i","myDate","year","getFullYear","month","getMonth","days","getDate","getDay","className","getFormat","Component","TodoList","res","map","todo","rows","cols","value","localStorage","getItem","key","indexOf","readOnly","type","onClick","removeClick","NameForm","remove","handleChange","bind","handleSubmit","event","target","preventDefault","setItem","String","now","item","length","children","del","removeItem","splice","note","push","pop","s","getResult","id","placeholder","required","onChange","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f9736e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: this.zeros(new Date().getHours()) + \":\" + this.zeros(new Date().getMinutes()) + \":\" +\n                this.zeros(new Date().getSeconds())\n        });\n    }\n\n    zeros(i) {\n        if (i < 10) {\n            return \"0\" + i;\n        } else {\n            return i;\n        }\n    }\n\n    getFormat() {\n        let myDate = new Date();\n        let year = myDate.getFullYear();\n        let month = myDate.getMonth();\n        let days = myDate.getDate();\n        let day = myDate.getDay();\n        let dayArray = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        let monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"];\n        return (dayArray[day] + \" \"+ days + \" \"+ monthArray[month] + \" \" + year);\n    }\n\n    render() {\n        return <p className=\"App-clock\">{this.getFormat()} <br/>\n                <span>{this.state.time}</span>\n               </p>;\n    }\n}\n\nexport default Clock;","import React from \"react\";\n\nfunction TodoList(props) {\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <div className=\"row\" >\n              {props.res.map(todo => {\n                return (\n                  <div className=\"col-xs-9 col-sm-6 col-md-4 col-lg-3\">\n                    <div className=\"notes\">\n                      <div className=\"todos\"><textarea rows=\"5\" cols=\"12\" value={localStorage.getItem\n                        (localStorage.key(props.res.indexOf(todo)))} readOnly/>\n                      </div>\n                    <div className=\"block\">\n                      <button type=\"button\" className=\"close\" onClick={() =>\n                        props.removeClick(todo)}>üóëÔ∏è\n                      </button>\n                    </div>\n                    </div>\n                  </div>)})}\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport form from \"./form.css\";\nimport Clock from \"./Clock\";\nimport TodoList from \"./TodoList\";\n\n\nclass NameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: '', remove: ''};\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.removeClick = this.removeClick.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({value: event.target.value});\n\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      if (this.state.value !== \"\") {\n        localStorage.setItem(String(Date.now()), this.state.value);\n        this.setState({value: \"\"})\n    }}\n\n    removeClick(item) {\n      for (let i=0; i<=this.res.length-1; i++) {\n        if (this.res[i].props.children === item.props.children) {\n          let del = localStorage.key(i);\n          localStorage.removeItem(String(del));\n          this.res.splice(i);\n        }\n      }\n      this.setState({value: \"\"})\n    }\n\n    getResult() {\n      this.res = []\n      for (let i = 0; i<=localStorage.length; i++) {\n        const note = localStorage.getItem(localStorage.key(i));\n        this.res.push(<div>{note}</div> );\n        }\n      this.res.pop();\n      if (this.res.length > 1)\n          this.s = \"s\";\n      else\n          this.s = \"\";\n    };\n\n\n    render() {\n      this.getResult()\n      return (\n        <div>\n          <div className=\"wide\">\n            <div className=\"main-container\">\n              <div className=\"top\">\n                <div className=\"title\">\n                  <h1 id=\"date\">\n                    <Clock />\n                  </h1>\n                  <h2>You've got\n                    <span className=\"total__items\"> {this.res.length}</span> thing{this.s} to do today!\n                  </h2>\n                </div>\n                <button className=\"add_btn\" onClick={this.handleSubmit}>+</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom\">\n            <div className=\"add\">\n              <div className=\"add__container\">\n                <input type=\"text\" className=\"add__description\"\n                       placeholder=\"What would you like to do today?\"\n                       required=\"True\" value={this.state.value} onChange={this.handleChange}/>\n              </div>\n            </div>\n          </div>\n          <TodoList removeClick={this.removeClick} res={this.res} />\n        </div>\n      );\n  }\n  }\n\nexport default NameForm;\n","import NameForm from \"./forms/NameForm\";\n\nfunction App() {\n  return (<div className=\"container-fluid\">\n            <NameForm />\n          </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}