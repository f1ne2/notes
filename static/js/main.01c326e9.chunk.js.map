{"version":3,"sources":["forms/Clock.js","forms/Todo.js","forms/NameForm.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","time","Date","getHours","getMinutes","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","zeros","i","myDate","year","getFullYear","month","getMonth","days","getDate","getDay","className","getFormat","Component","Todo","rows","cols","value","localStorage","getItem","key","res","indexOf","todo","readOnly","type","onClick","removeClick","React","NameForm","handleChange","event","target","handleSubmit","preventDefault","setItem","String","now","item","length","children","del","removeItem","splice","remove","note","push","pop","s","getResult","id","placeholder","required","onChange","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01c326e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: this.zeros(new Date().getHours()) + \":\" + this.zeros(new Date().getMinutes()) + \":\" +\n                this.zeros(new Date().getSeconds())\n        });\n    }\n\n    zeros(i) {\n        if (i < 10) {\n            return \"0\" + i;\n        } else {\n            return i;\n        }\n    }\n\n    getFormat() {\n        let myDate = new Date();\n        let year = myDate.getFullYear();\n        let month = myDate.getMonth();\n        let days = myDate.getDate();\n        let day = myDate.getDay();\n        let dayArray = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        let monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"];\n        return (dayArray[day] + \" \"+ days + \" \"+ monthArray[month] + \" \" + year);\n    }\n\n    render() {\n        return <p className=\"App-clock\">{this.getFormat()} <br/>\n                <span>{this.state.time}</span>\n               </p>;\n    }\n}\n\nexport default Clock;","import React from \"react\";\n\nclass Todo extends React.Component {\n  render() {\n    return (\n        <div className=\"notes\">\n          <div className=\"todos\"><textarea rows=\"5\" cols=\"12\" value={localStorage.getItem\n            (localStorage.key(this.props.res.indexOf(this.props.todo)))} readOnly/>\n              <div className=\"block\">\n                <button type=\"button\" onClick={() =>\n                    this.props.removeClick(this.props.todo)}>\n                    <span>&#215;</span>\n                </button>\n              </div>\n          </div>\n        </div>\n      );\n    }}\n\nexport default Todo;","import React from \"react\";\nimport form from \"./form.css\";\nimport Clock from \"./Clock\";\nimport Todo from \"./Todo\";\n\n\nclass NameForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: '', remove: ''};\n    }\n\n    handleChange = (event) => {\n      this.setState({value: event.target.value});\n\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n      if (this.state.value !== \"\") {\n        localStorage.setItem(String(Date.now()), this.state.value);\n        this.setState({value: \"\"})\n    }}\n\n    removeClick = (item) => {\n      for (let i=0; i<=this.res.length-1; i++) {\n        if (this.res[i].props.children === item.props.children) {\n          let del = localStorage.key(i);\n          localStorage.removeItem(String(del));\n          this.res.splice(i);\n        }\n      }\n      this.setState({value: \"\"})\n    }\n\n    getResult() {\n      this.res = []\n      for (let i = 0; i<=localStorage.length; i++) {\n        const note = localStorage.getItem(localStorage.key(i));\n        this.res.push(<div>{note}</div> );\n        }\n      this.res.pop();\n      if (this.res.length > 1)\n          this.s = \"s\";\n      else\n          this.s = \"\";\n    };\n\n    render() {\n      this.getResult()\n      return (\n        <div>\n          <div className=\"wide\">\n            <div className=\"main-container\">\n              <div className=\"top\">\n                <div className=\"title\">\n                  <h1 id=\"date\">\n                    <Clock />\n                  </h1>\n                  <h2>You've got\n                    <span className=\"total__items\"> {this.res.length}</span> thing{this.s} to do today!\n                  </h2>\n                </div>\n                <button className=\"add_btn\" onClick={this.handleSubmit}>+</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"add__container\">\n            <input type=\"text\" className=\"add__description\"\n                   placeholder=\"What would you like to do today?\"\n                   required=\"True\" value={this.state.value} onChange={this.handleChange}/>\n          </div>{this.res.map(todo => <Todo key={this.res.indexOf(todo)} todo={todo}\n                                            res={this.res} removeClick={this.removeClick} />)}\n        </div>\n      );\n  }\n  }\n\nexport default NameForm;\n","import NameForm from \"./forms/NameForm\";\n\nfunction App() {\n  return (<div className=\"container-fluid\">\n            <NameForm />\n          </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}