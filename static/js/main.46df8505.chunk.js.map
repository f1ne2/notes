{"version":3,"sources":["forms/238482300080212.png","forms/NameForm.js","App.js","reportWebVitals.js","index.js"],"names":["NameForm","props","state","value","remove","handleChange","bind","handleSubmit","removeClick","notes","event","this","setState","target","preventDefault","push","alert","localStorage","setItem","String","Date","now","item","i","res","length","children","del","key","getItem","removeItem","splice","note","pop","id","className","onSubmit","placeholder","required","onChange","type","map","todo","src","backGround","rows","cols","indexOf","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAe,G,MAAA,IAA0B,6C,OC4E1BA,E,kDAtEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,MAAO,GACrBC,OAAQ,IACR,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,MAAQ,GAPE,E,gDAUnB,SAAaC,GAAYC,KAAKC,SAAS,CAACT,MAAOO,EAAMG,OAAOV,U,0BAC5D,SAAaO,GACTA,EAAMI,iBACNH,KAAKF,MAAMM,KAAKJ,KAAKT,MAAMC,OAC3Ba,MAAM,eAAiBL,KAAKT,MAAMC,OAClCc,aAAaC,QAAQC,OAAOC,KAAKC,OAAQV,KAAKT,MAAMC,OACpDQ,KAAKC,SAAS,CAACT,MAAO,O,yBAI1B,SAAYmB,GACR,IAAK,IAAIC,EAAE,EAAGA,GAAGZ,KAAKa,IAAIC,OAAO,EAAGF,IAChC,GAAIZ,KAAKa,IAAID,GAAGtB,MAAMyB,WAAaJ,EAAKrB,MAAMyB,SAAU,CACpD,IAAIC,EAAMV,aAAaW,IAAIL,GAC3BP,MAAOC,aAAaY,QAAQF,GAAO,WACnCV,aAAaa,WAAWX,OAAOQ,IAC/BhB,KAAKa,IAAIO,OAAOR,GAGxBZ,KAAKC,SAAS,CAACT,MAAO,O,oBAG1B,WAAU,IAAD,OACLQ,KAAKa,IAAM,GACX,IAAK,IAAID,EAAI,EAAGA,GAAGN,aAAaQ,OAAQF,IAAK,CACzC,IAAMS,EAAOf,aAAaY,QAAQZ,aAAaW,IAAIL,IACnDZ,KAAKa,IAAIT,KAAK,8BAAMiB,KAGxB,OADArB,KAAKa,IAAIS,MAEL,gCACI,qBAAKC,GAAG,OAAR,SACJ,uBAAMC,UAAU,QAAQC,SAAUzB,KAAKJ,aAAvC,UACI,gCACI,uBAAO8B,YAAY,aAAaC,SAAS,OAC/BnC,MAAOQ,KAAKT,MAAMC,MAClBoC,SAAU5B,KAAKN,iBAC7B,wBAAQmC,KAAK,SAASL,UAAU,gDAAhC,2BAGJ,qBAAKA,UAAU,kBAAf,SACA,qBAAKA,UAAU,MAAf,SACKxB,KAAKa,IAAIiB,KAAI,SAAAC,GACd,OAAQ,qBAAKP,UAAU,uCAAf,SACJ,sBAAKA,UAAU,QAAf,UACI,qBAAKQ,IAAKC,EAAYT,UAAU,cAChC,qBAAKA,UAAU,QAAf,SAAuB,0BAAUU,KAAK,IAAIC,KAAK,KACd3C,MAAOc,aAAaY,QAAQZ,aAAaW,IAAI,EAAKJ,IAAIuB,QAAQL,SAE/F,qBAAKP,UAAU,QAAf,SACI,wBAAQK,KAAK,SAASL,UAAU,QAAQa,QAAS,kBAC7C,EAAKxC,YAAYkC,IADrB,8C,GA7DLO,IAAMC,WCMdC,MARf,WACE,OAAQ,sBAAKhB,UAAU,kBAAf,UACA,2DACI,cAAC,EAAD,QCMCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46df8505.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/238482300080212.6abfb256.png\";","import React from \"react\";\nimport form from \"./form.css\";\nimport backGround from \"./238482300080212.png\";\n\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: '',\n        remove: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeClick = this.removeClick.bind(this);\n        this.notes = [];\n    }\n\n    handleChange(event) {    this.setState({value: event.target.value});  }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.notes.push(this.state.value)\n        alert('Note added: ' + this.state.value);\n        localStorage.setItem(String(Date.now()), this.state.value);\n        this.setState({value: \"\"});\n\n    }\n\n    removeClick(item) {\n        for (let i=0; i<=this.res.length-1; i++) {\n            if (this.res[i].props.children === item.props.children) {\n                let del = localStorage.key(i);\n                alert (localStorage.getItem(del) + \"Removed\")\n                localStorage.removeItem(String(del));\n                this.res.splice(i)\n            }\n        }\n        this.setState({value: \"\"})\n    }\n\n    render() {\n        this.res = []\n        for (let i = 0; i<=localStorage.length; i++) {\n            const note = localStorage.getItem(localStorage.key(i));\n            this.res.push(<div>{note}</div> );\n        }\n        this.res.pop()\n        return (\n            <div>\n                <div id=\"wide\">\n            <form className=\"enter\" onSubmit={this.handleSubmit}>\n                <label>\n                    <input placeholder=\"Enter Note\" required=\"True\"\n                              value={this.state.value}\n                              onChange={this.handleChange} /></label>\n                <button type=\"submit\" className=\"btn waves-effect waves-light btn-grd-primary \">Add note</button>\n            </form>\n                </div>\n            <div className=\"container-fluid\">\n            <div className=\"row\">\n                {this.res.map(todo => {\n                return (<div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n                    <div className=\"notes\">\n                        <img src={backGround} className=\"img-fluid\" />\n                        <div className=\"todos\"><textarea rows=\"5\" cols=\"10\"\n                                                         value={localStorage.getItem(localStorage.key(this.res.indexOf(todo)))}/>\n                        </div>\n                        <div className=\"block\">\n                            <button type=\"button\" className=\"close\" onClick={() =>\n                                this.removeClick(todo)}>&times; remove\n                            </button>\n                        </div>\n                    </div>\n                </div>)})}\n                </div>\n            </div>\n            </div>\n        );}}\nexport default NameForm;\n","import './App.css';\nimport NameForm from \"./forms/NameForm\";\n\nfunction App() {\n  return (<div className=\"container-fluid\">\n          <h2> Hello! It's your notes! </h2>\n              <NameForm />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}